CREATE TABLE IF NOT EXISTS users (
id INT NOT NULL AUTO_INCREMENT,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
username VARCHAR(20) NOT NULL,
password VARCHAR(100) NOT NULL,
enabled BIT NOT NULL DEFAULT 1,
PRIMARY KEY(id),
UNIQUE(username)
);

CREATE TABLE IF NOT EXISTS roles (
id INT NOT NULL AUTO_INCREMENT,
id_user INT NOT NULL,
role ENUM('ROLE_STUDENT','ROLE_TENANT', 'ROLE_ADMIN') NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(id_user) REFERENCES users(id),
UNIQUE(id_user,role)
);

CREATE TABLE IF NOT EXISTS applications (
id INT NOT NULL AUTO_INCREMENT,
id_user INT NOT NULL,
gender ENUM('MALE','FEMALE') NOT NULL,
birth_date DATE NOT NULL,
address VARCHAR(255) NOT NULL,
jmbag CHAR(10) NOT NULL,
university VARCHAR(50) NOT NULL,
creation_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
approved BIT NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(id_user) REFERENCES users(id),
UNIQUE(id_user)
);

CREATE TABLE IF NOT EXISTS announcements (
id INT NOT NULL AUTO_INCREMENT,
id_user INT NOT NULL,
title VARCHAR(30) NOT NULL,
body TEXT NOT NULL,
creation_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
expiration_date DATETIME NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(id_user) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS complaints (
id INT NOT NULL AUTO_INCREMENT,
id_user INT NOT NULL,
body TEXT NOT NULL,
creation_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
solved BIT NOT NULL DEFAULT 0,
PRIMARY KEY(id),
FOREIGN KEY(id_user) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS rooms (
id INT NOT NULL AUTO_INCREMENT,
name varchar(50) NOT NULL,
capacity INT NOT NULL DEFAULT 2,
PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS tenants (
id INT NOT NULL AUTO_INCREMENT,
id_application INT NOT NULL,
id_room INT NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(id_application) REFERENCES applications(id),
FOREIGN KEY(id_room) REFERENCES rooms(id)
);